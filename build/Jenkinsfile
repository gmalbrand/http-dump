pipeline {
  agent none

  environment {
    REPOSITORY='gmalbrand/http-dump'
  }

  stages {
    stage('Build & Tests') {
      agent {
        docker {
          label 'docker'
          image 'golang:1.19.3-alpine'
          args '-e GOCACHE=/tmp'
        }
      }
      steps {
        dir("${env.WORKSPACE}/src"){
          sh 'go build -o http-dump main.go'
        }
      }

    }
    
    stage('Publishing to dockerhub'){
      agent {label 'docker'}
      stages {
        stage('Build multi arch image') {
          steps {
              withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', passwordVariable: 'docker_pwd', usernameVariable: 'docker_user')]) {
                  sh 'docker login -u $docker_user -p $docker_pwd'
              }
              sh 'export GIT_TAG=$(git tag)'
              sh 'docker buildx build --push -t "$REPOSITORY:$GIT_TAG.$BUILD_NUMBER" -t $REPOSITORY:latest --platform "linux/amd64,linux/arm64" -f build/Dockerfile .' 
              sh 'docker logout'
          }
        }
        /*
        stage('Push image') {
          steps {
              
              sh 'docker push $REPOSITORY --all-tags'
              sh 'docker logout'
          }
        }

        stage('Cleaning repository') {
          steps {
              sh 'docker rmi $REPOSITORY:latest'
              sh 'docker rmi $REPOSITORY:$BUILD_NUMBER'
          }
        }
        */
      }
    }

  }
  post {
      always{
          emailext body: '$DEFAULT_CONTENT', subject: '[Jenkins] $DEFAULT_SUBJECT', to: '$DEFAULT_RECIPIENTS'
      }
  }
}
