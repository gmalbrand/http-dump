pipeline {
  agent none

  environment {
    REPOSITORY='gmalbrand/http-dump'
  }

  stages {
    stage('Build & Tests') {
      agent {
        docker {
          label 'docker'
          image 'golang:1.19.3-alpine'
          args '-e GOCACHE=/tmp'
        }
      }
      steps {
        dir("${env.WORKSPACE}/src"){
          sh 'go build -o http-dump main.go'
          sh 'printenv'
        }
      }

    }

    
    stage('Publish to dockerhub'){
      agent {label 'docker'}
      steps {
          withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', passwordVariable: 'docker_pwd', usernameVariable: 'docker_user')]) {
              sh 'docker login -u $docker_user -p $docker_pwd'
          }
          sh 'docker buildx build --push -t "$REPOSITORY:$BRANCH_NAME-$BUILD_NUMBER" -t $REPOSITORY:latest --platform "linux/amd64,linux/arm64" -f build/Dockerfile .' 
          sh 'docker logout'
      }
    }
    
  }

  post {
      always{
          emailext body: '$DEFAULT_CONTENT', subject: '[Jenkins] $DEFAULT_SUBJECT', to: '$DEFAULT_RECIPIENTS'
      }
  }
}
